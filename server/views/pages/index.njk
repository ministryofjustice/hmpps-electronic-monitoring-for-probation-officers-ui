{% extends "../partials/layout.njk" %}

{% block head %}
  <link href="{{ '/assets/css/app.css' | assetMap }}" rel="stylesheet"/>
{% endblock %}
{% set pageTitle = applicationName + " - Home" %}
{% set mainClasses = "app-container govuk-body" %}
{% set firstTimeRender = false %}

{% block content %}
  {# <!DOCTYPE html>
<html lang="en">
<body> #}
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css"/>
    <style>
      .leaflet-control-attribution {
        display: none;
      }
    </style>
  </head>
  <h1>Locations of interest</h1>

  <table class="govuk-table">
    <caption class="govuk-table__caption govuk-table__caption--m">Name: John Doe</caption>
    <thead class="govuk-table__head">
      <tr class="govuk-table__row">
        <th scope="col" class="govuk-table__header"></th>
        <th scope="col" class="govuk-table__header">Date</th>
        <th scope="col" class="govuk-table__header">Destination</th>
        <th scope="col" class="govuk-table__header">Time Period</th>
        <th scope="col" class="govuk-table__header"></th>
      </tr>
    </thead>
    <tbody class="govuk-table__body">
      {% for route in mapData.routes %}
        <tr class="govuk-table__row">
          <th scope="row" class="govuk-table__header">{{loop.index}}</th>
          <th scope="row" class="govuk-table__header">{{route.date}}</th>
          <td class="govuk-table__cell">{{route.destination}}</td>
          <td class="govuk-table__cell">{{route.timePeriod}}</td>
          <td class="govuk-table__cell">
            <button onclick={selectRoute({{loop.index0}})} class="govuk-button" data-module="govuk-button">Select</button>
          </td>
        </tr>
      {% endfor %}
    </tbody>
  </table>

  <h2 id="selectedDate">Date: {{ selectedRoute.date }}</h2>
  <h2 id="selectedDestination">Destination: {{selectedRoute.destination }}</h2>
  <h2 id="selectedTimePeriod">Time Period: {{ selectedRoute.timePeriod }}</h2>

  <div id="map" style="height: 500px;"></div>

  <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>

  <script>
    const mapDataAsJSON = JSON.parse('{{ mapData | dump | safe }}');
    let routeLayer;
    let basemap;

    const selectRoute = (routeNumber) => {
      document.getElementById("selectedDate").textContent = `Date: ${mapDataAsJSON.routes[routeNumber].date}`
      document.getElementById("selectedDestination").textContent = `Destination: ${mapDataAsJSON.routes[routeNumber].destination}`
      document.getElementById("selectedTimePeriod").textContent = `Time Period: ${mapDataAsJSON.routes[routeNumber].timePeriod}`

      const newRoute = mapDataAsJSON.routes[routeNumber].route.map(point => {
        return [point.lat,point.lng]
      })
      // show new route
      routeLayer.setLatLngs(newRoute);

    }

    const setMapData = () => {
      // Initialize the map.
      const mapOptions = {
        minZoom: 7,
        maxZoom: 20,
        center: [
          `{{mapData.routes[0].route[0].lat}}`, `{{mapData.routes[0].route[0].lng}}`
        ],
        zoom: 14
      };
      const map = L.map('map', mapOptions);

      // Load and display ZXY tile layer on the map.
      basemap = L
        .tileLayer('https://api.os.uk/maps/raster/v1/zxy/Light_3857/{z}/{x}/{y}.png?key=' + '{{ API_KEY }}', {maxZoom: 20})
        .addTo(map);

      const routeCoordinates = mapDataAsJSON.routes[0].route.map(point => {
        return [point.lat,point.lng]
      })

      routeLayer = L
        .polyline(routeCoordinates, {color: 'blue'})
        .addTo(map);

      console.log('routeLayer: ' ,routeLayer)
  }

  if ({{firstTimeRender}} === false) {
    setMapData()
    console.log('setting map'){% set firstTimeRender = true %}
    console.log('firstTimeRender value ', {{firstTimeRender}})
  }
  </script>
  {# </body>
</html> #}

{% endblock %}